{"ast":null,"code":"import _objectSpread from \"/Users/santanamu/Desktop/pos-p3/pos-sys/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/santanamu/Desktop/pos-p3/pos-sys/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/santanamu/Desktop/pos-p3/pos-sys/src/ContactManager.js\";\nimport React, { useState } from 'react';\nimport { useTable } from 'react-table';\nexport default function MyTable() {\n  var _this = this;\n  var data = React.useMemo(function () {\n    return [{\n      col1: 'Hello',\n      col2: 'World'\n    }, {\n      col1: 'react-table',\n      col2: 'rocks'\n    }, {\n      col1: 'whatever',\n      col2: 'you want'\n    }];\n  }, []);\n  var columns = React.useMemo(function () {\n    return [{\n      Header: 'Column 1',\n      accessor: 'col1' // accessor is the \"key\" in the data\n    }, {\n      Header: 'Column 2',\n      accessor: 'col2'\n    }];\n  }, []);\n  var _useTable = useTable({\n      columns: columns,\n      data: data\n    }),\n    getTableProps = _useTable.getTableProps,\n    getTableBodyProps = _useTable.getTableBodyProps,\n    headerGroups = _useTable.headerGroups,\n    rows = _useTable.rows,\n    prepareRow = _useTable.prepareRow;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedRowData = _useState2[0],\n    setSelectedRowData = _useState2[1];\n  var getSelectedRowwValues = function getSelectedRowwValues(selectedRow) {\n    setSelectedRowData(_objectSpread({}, selectedRow.values));\n    console.log(_objectSpread({}, selectedRow.values));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    style: {\n      border: 'solid 1px blue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), headerGroup.headers.map(function (column) {\n      return /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n        style: {\n          borderBottom: 'solid 3px red',\n          background: 'aliceblue',\n          color: 'black',\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }), column.render('Header'));\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), rows.map(function (row) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      onClick: function onClick() {\n        return getSelectedRowwValues(row);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        style: {\n          padding: '10px',\n          border: 'solid 1px gray',\n          background: 'papayawhip'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Selected row: \", JSON.stringify(selectedRowData, null, 2)));\n}","map":{"version":3,"names":["React","useState","useTable","MyTable","data","useMemo","col1","col2","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedRowData","setSelectedRowData","getSelectedRowwValues","selectedRow","values","console","log","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding","JSON","stringify"],"sources":["/Users/santanamu/Desktop/pos-p3/pos-sys/src/ContactManager.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { useTable } from 'react-table';\n\nexport default function MyTable() {\n  const data = React.useMemo(\n    () => [\n      {\n        col1: 'Hello',\n        col2: 'World'\n      },\n      {\n        col1: 'react-table',\n        col2: 'rocks'\n      },\n      {\n        col1: 'whatever',\n        col2: 'you want'\n      }\n    ],\n    []\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Column 1',\n        accessor: 'col1' // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Column 2',\n        accessor: 'col2'\n      }\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({ columns, data });\n\n  const [selectedRowData, setSelectedRowData] = useState([]);\n\n  const getSelectedRowwValues = selectedRow => {\n    setSelectedRowData({ ...selectedRow.values });\n    console.log({ ...selectedRow.values })\n  };\n\n  return (\n    <div>\n      <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  {...column.getHeaderProps()}\n                  style={{\n                    borderBottom: 'solid 3px red',\n                    background: 'aliceblue',\n                    color: 'black',\n                    fontWeight: 'bold'\n                  }}\n                >\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row);\n            return (\n              <tr\n                {...row.getRowProps()}\n                onClick={() => getSelectedRowwValues(row)}\n              >\n                {row.cells.map(cell => {\n                  return (\n                    <td\n                      {...cell.getCellProps()}\n                      style={{\n                        padding: '10px',\n                        border: 'solid 1px gray',\n                        background: 'papayawhip'\n                      }}\n                    >\n                      {cell.render('Cell')}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <pre>Selected row: {JSON.stringify(selectedRowData, null, 2)}</pre>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}